{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","props","theme","colors","primaryLighter","TodoBody","Title","primaryDarker","TodoInputWrapper","TodoInput","input","secondaryLight","TodoWrapper","isShow","TodoContentWrapper","TodoCheck","primaryDark","isDone","TodoContent","isUpdate","TodoContentInput","TodoButtonWrapper","Button","ButtonAdd","secondary","ButtonFooter","TodoFooter","id","App","useState","content","todos","setTodos","value","setValue","show","setShow","handleDeleteTodo","filter","todo","handleToggleIsDone","map","handleUpdateClick","handleUpdate","e","key","target","type","placeholder","onChange","onClick","data-todo-id","onKeyPress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","primary","primaryLight","document","getElementById"],"mappings":"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","file":"static/js/main.f593602f.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { useState } from \"react\"; // 要用 state 要 import React\n\nconst Wrapper = styled.div`\n  margin: auto;\n  margin-top: 48px;\n  max-width: 840px;\n  border-radius: 10px;\n  background-color: ${(props) => props.theme.colors.primaryLighter};\n`;\n\nconst TodoBody = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  font-size: 32px;\n  color: ${(props) => props.theme.colors.primaryDarker};\n  text-align: center;\n  font-weight: bold;\n  font-style: italic;\n`;\n\nconst TodoInputWrapper = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n`;\nconst TodoInput = styled.input`\n  flex: 1;\n  margin-right: 5px;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme.colors.secondaryLight};\n  border: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst TodoWrapper = styled.div`\n  display: flex;\n  position: relative;\n\n  & + & {\n    margin-top: 10px;\n  }\n\n  ${(props) =>\n    !props.isShow &&\n    `\n    display: none;\n  `}\n`;\nconst TodoContentWrapper = styled.div`\n  flex: 1;\n  display: flex;\n`;\n\nconst TodoCheck = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: ${(props) => props.theme.colors.primaryDark};\n  cursor: pointer;\n\n  ${(props) =>\n    props.isDone &&\n    `\n    transform: rotate(-55deg);\n\n    &:before {\n      content: \"\";\n      display: block;\n      position: relative;\n      left: 7px;\n      top: 6px;\n      width: 10px;\n      height: 6px;\n      border-bottom: 2px solid white;\n      border-left: 2px solid white;\n    }\n  `}\n`;\n\nconst TodoContent = styled.div`\n  flex: 1;\n  margin-left: 10px;\n  margin-right: 10px;\n  font-size: 16px;\n  word-break: break-all;\n\n  ${(props) =>\n    props.isDone &&\n    `\n    text-decoration: line-through;\n  `}\n\n  ${(props) =>\n    props.isUpdate &&\n    `\n    display: none;\n  `}\n`;\n\nconst TodoContentInput = styled.input`\n  flex: 1;\n  margin-left: 10px;\n  margin-right: 10px;\n  background-color: ${(props) => props.theme.colors.secondaryLight};\n  font-size: 16px;\n  border: none;\n  outline: none;\n\n  ${(props) =>\n    !props.isUpdate &&\n    `\n    display: none;\n  `}\n`;\n\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.div`\n  padding: 5px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme.colors.primaryDark};\n  color: ${(props) => props.theme.colors.secondaryLight};\n  height: 16px;\n  line-height: 16px;\n  font-size: 14px;\n  cursor: pointer;\n\n  & + & {\n    margin-left: 5px;\n  }\n\n  ${(props) =>\n    props.isDone &&\n    `\n    display: none;\n  `}\n`;\n\nconst ButtonAdd = styled(Button)`\n  padding: 5px 10px;\n  background-color: ${(props) => props.theme.colors.secondary};\n  color: ${(props) => props.theme.colors.primaryDark};\n  font-weight: bold;\n`;\n\nconst ButtonFooter = styled(Button)`\n  color: ${(props) => props.theme.colors.primaryDark};\n  background-color: ${(props) => props.theme.colors.secondaryLight};\n`;\n\nconst TodoFooter = styled.div`\n  display: flex;\n  padding: 10px 20px;\n  background-color: ${(props) => props.theme.colors.primaryDark};\n`;\n\nlet id = 3;\nfunction App() {\n  // state [value, setter] (初始值)\n  const [todos, setTodos] = useState([\n    { id: 1, content: \"uncheck\", isDone: false, isShow: true },\n    { id: 2, content: \"check\", isDone: true, isShow: true },\n  ]);\n  const [value, setValue] = useState(\"\");\n  const [show, setShow] = useState(\"all\");\n\n  const handleAddTodo = () => {\n    let isShow = true;\n    if (show === \"done\") {\n      isShow = false;\n    }\n    setTodos([\n      {\n        id,\n        content: value,\n        isDone: false,\n        isUpdate: false,\n        isShow,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    id += 1;\n  };\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const handleClearAll = (todos) => {\n    setTodos((todos = []));\n  };\n\n  const handleUpdateClick = (id, isDone) => {\n    if (isDone) return;\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isUpdate: !todo.isUpdate,\n        };\n      })\n    );\n  };\n\n  const handleUpdate = (id, e) => {\n    if (e.key === \"Enter\") {\n      setTodos(\n        todos.map((todo) => {\n          if (todo.id !== id) return todo;\n          return {\n            ...todo,\n            isUpdate: !todo.isUpdate,\n            content: e.target.value,\n          };\n        })\n      );\n    }\n  };\n\n  const handleSelectAll = () => {\n    setShow(\"all\");\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          isShow: true,\n        };\n      })\n    );\n  };\n\n  const handleSelectIsDone = () => {\n    setShow(\"done\");\n    setTodos(\n      todos.map((todo) => {\n        if (todo.isDone) {\n          return {\n            ...todo,\n            isShow: true,\n          };\n        }\n        return {\n          ...todo,\n          isShow: false,\n        };\n      })\n    );\n  };\n\n  const handleSelectUndone = () => {\n    setShow(\"undone\");\n    setTodos(\n      todos.map((todo) => {\n        if (todo.isDone) {\n          return {\n            ...todo,\n            isShow: false,\n          };\n        }\n        return {\n          ...todo,\n          isShow: true,\n        };\n      })\n    );\n  };\n\n  return (\n    <Wrapper>\n      <TodoBody>\n        <Title>todo list</Title>\n        <TodoInputWrapper>\n          <TodoInput\n            type=\"text\"\n            value={value}\n            placeholder=\"add todo\"\n            onChange={handleInputChange}\n          />\n          <ButtonAdd onClick={handleAddTodo}>+</ButtonAdd>\n        </TodoInputWrapper>\n\n        {todos.map((todo) => (\n          <TodoWrapper\n            key={todo.id}\n            isShow={todo.isShow}\n            data-todo-id={todo.id}\n            handleDeleteTodo={handleDeleteTodo}\n            handleUpdate={handleUpdate}\n            handleUpdateClick={handleUpdateClick}\n            handleToggleIsDone={handleToggleIsDone}\n          >\n            <TodoContentWrapper>\n              <TodoCheck\n                onClick={() => {\n                  handleToggleIsDone(todo.id);\n                }}\n                isDone={todo.isDone}\n              />\n              <TodoContent isUpdate={todo.isUpdate} isDone={todo.isDone}>\n                {todo.content}\n              </TodoContent>\n              <TodoContentInput\n                onKeyPress={(e) => handleUpdate(todo.id, e)}\n                isUpdate={todo.isUpdate}\n                placeholder={todo.content}\n              />\n            </TodoContentWrapper>\n            <TodoButtonWrapper>\n              <Button\n                onClick={() => handleUpdateClick(todo.id, todo.isDone)}\n                isUpdate={todo.isUpdate}\n                isDone={todo.isDone}\n              >\n                編輯\n              </Button>\n              <Button onClick={() => handleDeleteTodo(todo.id)}>刪除</Button>\n            </TodoButtonWrapper>\n          </TodoWrapper>\n        ))}\n      </TodoBody>\n      <TodoFooter>\n        <ButtonFooter onClick={handleClearAll}>清空</ButtonFooter>\n        <ButtonFooter onClick={handleSelectAll}>全部</ButtonFooter>\n        <ButtonFooter onClick={handleSelectIsDone}>已完成</ButtonFooter>\n        <ButtonFooter onClick={handleSelectUndone}>未完成</ButtonFooter>\n      </TodoFooter>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    primaryDarker: \"#003f69\",\n    primaryDark: \"#0169a4\",\n    primary: \"#8db9ca\",\n    primaryLight: \"#74d2e7\",\n    primaryLighter: \"#c4dff6\",\n\n    secondaryLight: \"#f2f6fa\",\n    secondary: \"#ffed00\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}